{"version":3,"sources":["assets/small/Photography/1.jpg","assets/small sync /^/.*/.jpg$","assets/small/Photography/0.jpg","assets/small/Projects/work1.jpg","assets/small/Projects/work2.jpg","assets/small/Projects/work3.jpg","utils/helpers.js","Components/Nav/index.js","Components/About/index.js","Components/Modal/index.js","Components/PhotoList/index.js","Components/Gallery/index.js","Components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","contactSelected","currentCategory","setContactSelected","useEffect","document","title","name","className","href","onClick","category","About","src","coverImage","style","width","alt","Modal","onClose","currentPhoto","index","require","type","PhotoList","useState","isModalOpen","setIsModalOpen","setCurrentPhoto","description","currentPhotos","filter","photo","toggleModal","image","i","Gallery","ContactForm","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","length","console","log","onSubmit","preventDefault","htmlFor","defaultValue","onBlur","rows","App","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f2be4531.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.736fbeae.jpg\";","var map = {\n\t\"./Photography/0.jpg\": 15,\n\t\"./Photography/1.jpg\": 5,\n\t\"./Projects/work1.jpg\": 16,\n\t\"./Projects/work2.jpg\": 17,\n\t\"./Projects/work3.jpg\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;","export default __webpack_public_path__ + \"static/media/0.d904d974.jpg\";","export default __webpack_public_path__ + \"static/media/work1.1858d04b.jpg\";","export default __webpack_public_path__ + \"static/media/work2.986dec41.jpg\";","export default __webpack_public_path__ + \"static/media/work3.fb0d532d.jpg\";","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Nav(props) {\n  const {\n    categories = [],\n    setCurrentCategory,\n    contactSelected,\n    currentCategory,\n    setContactSelected,\n  } = props;\n\n  useEffect(() => {\n    document.title = capitalizeFirstLetter(currentCategory.name);\n  }, [currentCategory]);\n\n  return (\n    <header className=\"flex-row px-1\">\n      \n      <nav>\n        <ul className=\"flex-row\">\n          <li className=\"mx-2\">\n            <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n              About\n            </a>\n          </li>\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n            <span onClick={() => setContactSelected(true)}>Contact</span>\n          </li>\n          {categories.map((category) => (\n            <li\n              className={`mx-1 ${\n                currentCategory.name === category.name && !contactSelected && 'navActive'\n                }`}\n              key={category.name}\n            >\n              <span\n                onClick={() => {\n                  setCurrentCategory(category);\n                  setContactSelected(false);\n                }}\n              >\n                {capitalizeFirstLetter(category.name)}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n\n","import React from 'react';\nimport coverImage from '../../assets/small/Photography/1.jpg';\nfunction About() {\n  return (\n    <section className=\"my-5\">\n      <h1 id=\"about\">Introduction</h1>\n      <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\n      <div className=\"my-2\">\n        <p>\n          I currently work for Beasly Media Group as the Corporate IT Manager. \n          I am currenlty enrolled at University of Austin in the Full Stack cooding boot camp. \n          I also bake and have a degree in psychology. \n          I hope to use the skill I learn in the boot camp to start off as a Front End Developer.\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default About;","import React from 'react';\n\nconst Modal = ({ onClose, currentPhoto }) => {\n  const { name, category, index, } = currentPhoto;\n\n  return (\n    <div className=\"modalBackdrop\">\n      <div className=\"modalContainer\">\n        <h3 className=\"modalTitle\">{name} </h3>\n        <img src={require(`../../assets/small/${category}/${index}.jpg`)} alt=\"current category\" />\n        \n        <button type=\"button\" onClick={onClose}>\n          Close this modal\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from '../Modal';\n\nconst PhotoList = ({ category}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentPhoto, setCurrentPhoto] = useState();\n\n  const [photos] = useState([\n    {\n      name: '0.jpg',\n      category: 'Photography',\n      \n    },\n    {\n      name: '1.jpg',\n      category: 'Photography',\n    \n    },\n    \n    \n    {\n      name: 'work1.jpg',\n      category: 'Projects',\n      description: 'https://github.com/fbenjaminmorris/lets-go-team>'\n     \n      \n    },\n    {\n      name: 'work2.jpg',\n      category: 'Projects',\n      description: 'https://fbenjaminmorris.github.io/whats-schedule/'\n      \n    },\n    {\n      name: 'work3.jpg',\n      category: 'Projects',\n      description: 'https://fbenjaminmorris.github.io/let-it-be/'\n    },\n        \n  ]);\n\n  const currentPhotos = photos.filter((photo) => photo.category === category);\n\n  const toggleModal = (image, i) => {\n    setCurrentPhoto({ ...image, index: i });\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <div>\n      {isModalOpen && <Modal onClose={toggleModal} currentPhoto={currentPhoto} />}\n      <div className=\"flex-row\">\n        {currentPhotos.map((image, i) => (\n          <img\n            src={require(`../../assets/small/${category}/${i}.jpg`)}\n            alt={image.name}\n            className=\"img-thumbnail mx-1\"\n            onClick={() => toggleModal(image, i)}\n            key={image.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoList;","import React from 'react';\nimport PhotoList from '../PhotoList';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Gallery(props) {\n  const { currentCategory } = props;\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">{capitalizeFirstLetter(currentCategory.name)}</h1>\n      <p>{currentCategory.description}</p>\n      <PhotoList category={currentCategory.name} />\n    </section>\n  );\n}\nexport default Gallery;","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      console.log('Submit Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n      console.log('Handle Form', formState);\n    }\n  };\n\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport Nav from './Components/Nav';\nimport About from './Components/About';\nimport Gallery from './Components/Gallery';\nimport ContactForm from './Components/Contact';\n\n\nfunction App() {\n  const [categories] = useState([\n  \n    { name: 'Photography', description: 'Photos and art' },\n    { name: 'Web Design', description: 'Webpage design' },\n    \n    \n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  const [contactSelected, setContactSelected] = useState(false);\n\n  return (\n    <div>\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n        {!contactSelected ? (\n          <>\n            <Gallery currentCategory={currentCategory}></Gallery>\n            <About></About>\n          </>\n        ) : (\n          <ContactForm></ContactForm>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}